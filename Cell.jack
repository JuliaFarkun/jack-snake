class Cell {
    field int type; // 0 - пустая, 1 - змея, 2 - яблоко
    field int x, y; // Координаты верхнего левого угла
    field int hash; // хеш-номер ячейки
    static int SIZE; // Размер 16x16 (константа)

    /** 
     * Создаём ячейку с координатами (x, y).
     * По умолчанию пустая.
     */
    constructor Cell new(int xPos, int yPos, int curHash) {
        let x = xPos;
        let y = yPos;
        let hash = curHash;
        let type = 0; // Пустая ячейка
        if (~(SIZE > 0)) {
            let SIZE = 16;
        }
        return this;
    }

    method int getType() {
        return type;
    }

    /** 
     * Устанавливает новый тип ячейки.
     * Вызывает отрисовку нужного объекта.
     */
    method void setType(int newType) {
        let type = newType;

        if (type = 0) {
            do clear();
        }
        if (type = 1) {
            do drawSnake();
        }
        if (type = 2) {
            do drawApple();
        }

        return;
    }

    
    method int getX() {
        return x;
    }

    method int getY() {
        return y;
    }

    method int getHash() {
        return hash;
    }

    method int getSize() {
        return SIZE;
    }


    /** 
     * Очищает ячейку (делает пустой и закрашивает белым).
     */
    method void clear() {
        do Screen.setColor(false); 
        do Screen.drawRectangle(x, y, x + SIZE, y + SIZE); 
        return;
    }

    method void drawSnake() {
        do Screen.setColor(true); 
        do Screen.drawRectangle(x, y, x + SIZE, y + SIZE);
        return;
    }

    method void drawApple() {
        do Screen.setColor(true);  
        do Screen.drawCircle(x + (SIZE / 2), y + (SIZE / 2), SIZE / 2 - 3);
        return;
    }
    
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }
}
